import matplotlib.pyplot as plt
import numpy as np


# Grille [0,10]x[0,10] avec un pas de 0.5, identique a notre object grille.
x=np.linspace(0,10, int(10.5/0.5))
y=np.linspace(0,10, int(10.5/0.5))
xx, yy = np.meshgrid(x,y)

########################################### Cas simple #################################################################

# Pos initiale [0.01, 5.01]
# Vit initiale [0,1]

# Import de champs de vent et courant identique simple générés sur c++, (0.5,0)^T pour chaque point de la grille
simple_X_vent = np.loadtxt(open(r"output\simple_X_vent", "rb"), delimiter=",", skiprows=0)
simple_Y_vent = np.loadtxt(open(r"output\simple_Y_vent", "rb"), delimiter=",", skiprows=0)
simple_X_courant = np.loadtxt(open(r"output\simple_X_courant", "rb"), delimiter=",", skiprows=0)
simple_Y_courant = np.loadtxt(open(r"output\simple_Y_courant", "rb"), delimiter=",", skiprows=0)

# Plot des champs de vent et courant
plt.quiver(xx, yy, simple_Y_vent, simple_X_vent, color='g' , scale=40, width=0.0015, alpha=1)
plt.quiver(xx, yy, simple_Y_courant, simple_X_courant,color='b', scale=40, width=0.0015, alpha=1)

# Trajectoire avec une commande constante de +40 degré.
# Pour un bateau efficace a ne pas suivre le vent (i.e faible pénalité par angle_vent_bateau dans foncteur polaire)
# Sinon la derive avec le courant est trop forte
position_simple_plus_40 = [[0.01,0.01,0.11,0.11,0.196829,0.196829,0.283658,0.283658,0.370487,0.370487,0.457316,0.457316,0.544145,0.544145,0.630974,0.630974,0.717803,0.717803,0.804632,0.804632,0.891462,0.891462,0.978291,0.978291,1.06512,1.06512,1.15195,1.15195,1.23878,1.23878,1.32561,1.32561,1.41244,1.41244,1.49926,1.49926,1.58609,1.58609,1.67292,1.67292,1.75975,1.75975,1.84658,1.84658,1.93341,1.93341,2.02024,2.02024,2.10707,2.10707,2.1939,2.1939,2.28073,2.28073,2.36756,2.36756,2.45438,2.45438,2.54121,2.54121,2.62804,2.62804,2.71487,2.71487,2.8017,2.8017,2.88853,2.88853,2.97536,2.97536,3.06219,3.06219,3.14902,3.14902,3.23584,3.23584,3.32267,3.32267,3.4095,3.4095,3.49633,3.49633,3.58316,3.58316,3.66999,3.66999,3.75682,3.75682,3.84365,3.84365,3.93048,3.93048,4.01731,4.01731,4.10413,4.10413,4.19096,4.19096,4.27779,4.27779,4.36462,4.36462,4.45145],[5.01,5.01,5.01,5.01,5.0409,5.0409,5.07181,5.07181,5.10271,5.10271,5.13361,5.13361,5.16452,5.16452,5.19542,5.19542,5.22632,5.22632,5.25723,5.25723,5.28813,5.28813,5.31903,5.31903,5.34994,5.34994,5.38084,5.38084,5.41174,5.41174,5.44265,5.44265,5.47355,5.47355,5.50445,5.50445,5.53536,5.53536,5.56626,5.56626,5.59716,5.59716,5.62807,5.62807,5.65897,5.65897,5.68987,5.68987,5.72078,5.72078,5.75168,5.75168,5.78258,5.78258,5.81349,5.81349,5.84439,5.84439,5.87529,5.87529,5.9062,5.9062,5.9371,5.9371,5.968,5.968,5.99891,5.99891,6.02981,6.02981,6.06071,6.06071,6.09162,6.09162,6.12252,6.12252,6.15342,6.15342,6.18433,6.18433,6.21523,6.21523,6.24613,6.24613,6.27704,6.27704,6.30794,6.30794,6.33884,6.33884,6.36975,6.36975,6.40065,6.40065,6.43155,6.43155,6.46246,6.46246,6.49336,6.49336,6.52426,6.52426,6.55517]]
plt.plot(position_simple_plus_40[0], position_simple_plus_40[1], 'o-', color='r')

# Trajectoire avec une commande constante de -40 degré.
# Pour un bateau efficace a ne pas suivre le vent (i.e faible pénalité par angle_vent_bateau dans foncteur polaire)
# Sinon la derive avec le courant est trop forte
position_simple_moins_40 = [[0.01,0.01,0.11,0.11,0.196829,0.196829,0.283658,0.283658,0.370487,0.370487,0.457316,0.457316,0.544145,0.544145,0.630974,0.630974,0.717803,0.717803,0.804632,0.804632,0.891462,0.891462,0.978291,0.978291,1.06512,1.06512,1.15195,1.15195,1.23878,1.23878,1.32561,1.32561,1.41244,1.41244,1.49926,1.49926,1.58609,1.58609,1.67292,1.67292,1.75975,1.75975,1.84658,1.84658,1.93341,1.93341,2.02024,2.02024,2.10707,2.10707,2.1939,2.1939,2.28073,2.28073,2.36756,2.36756,2.45438,2.45438,2.54121,2.54121,2.62804,2.62804,2.71487,2.71487,2.8017,2.8017,2.88853,2.88853,2.97536,2.97536,3.06219,3.06219,3.14902,3.14902,3.23584,3.23584,3.32267,3.32267,3.4095,3.4095,3.49633,3.49633,3.58316,3.58316,3.66999,3.66999,3.75682,3.75682,3.84365,3.84365,3.93048,3.93048,4.01731,4.01731,4.10413,4.10413,4.19096,4.19096,4.27779,4.27779,4.36462,4.36462,4.45145],[5.01,5.01,5.01,5.01,4.9791,4.9791,4.94819,4.94819,4.91729,4.91729,4.88639,4.88639,4.85548,4.85548,4.82458,4.82458,4.79368,4.79368,4.76277,4.76277,4.73187,4.73187,4.70097,4.70097,4.67006,4.67006,4.63916,4.63916,4.60826,4.60826,4.57735,4.57735,4.54645,4.54645,4.51555,4.51555,4.48464,4.48464,4.45374,4.45374,4.42284,4.42284,4.39193,4.39193,4.36103,4.36103,4.33013,4.33013,4.29922,4.29922,4.26832,4.26832,4.23742,4.23742,4.20651,4.20651,4.17561,4.17561,4.14471,4.14471,4.1138,4.1138,4.0829,4.0829,4.052,4.052,4.02109,4.02109,3.99019,3.99019,3.95929,3.95929,3.92838,3.92838,3.89748,3.89748,3.86658,3.86658,3.83567,3.83567,3.80477,3.80477,3.77387,3.77387,3.74296,3.74296,3.71206,3.71206,3.68116,3.68116,3.65025,3.65025,3.61935,3.61935,3.58845,3.58845,3.55754,3.55754,3.52664,3.52664,3.49574,3.49574,3.46483]]
plt.plot(position_simple_moins_40[0], position_simple_moins_40[1], 'o-', color='y')

# Plot simple pour montrer que tout marche bien
plt.show()

########################################### Cas complexe ###############################################################

# Import de champs de vent et courant plus complexe générés sur c++
X_vent = np.loadtxt(open(r"output\X_vent", "rb"), delimiter=",", skiprows=0)
Y_vent = np.loadtxt(open(r"output\Y_vent", "rb"), delimiter=",", skiprows=0)
X_courant = np.loadtxt(open(r"output\X_courant", "rb"), delimiter=",", skiprows=0)
Y_courant = np.loadtxt(open(r"output\Y_courant", "rb"), delimiter=",", skiprows=0)

# Trajectoires
position_pol_tabule_bassin_analytique= [[0.01,0.01,0.11,0.11,0.151,0.151,0.19747,0.19747,0.246173,0.246173,0.298079,0.298079,0.353536,0.353536,0.412913,0.412913,0.476595,0.476595,0.544992,0.544992,0.618546,0.618546,0.697728,0.697728,0.783029,0.783029,0.874938,0.874938,0.974468,0.974468,1.08287,1.08287,1.20024,1.20024,1.32721,1.32721,1.46413,1.46413,1.61154,1.61154,1.77004,1.77004,1.94041,1.94041,2.12349,2.12349,2.32019,2.32019,2.5314,2.5314,2.75796,2.75796,3.00048,3.00048,3.25931,3.25931,3.53433,3.53433,3.82495,3.82495,4.13014,4.13014,4.46733,4.46733,4.83076,4.83076,5.21925,5.21925,5.63562,5.63562,6.07968,6.07968,6.54905,6.54905,7.03811,7.03811,7.53916,7.53916,8.04618,8.04618,8.56577,8.56577,9.14335,9.14335,9.76231,9.76231,10.4103,10.4103],[0.01,0.01,0.11,0.11,0.192,0.192,0.303016,0.303016,0.432422,0.432422,0.582717,0.582717,0.755517,0.755517,0.952415,0.952415,1.17431,1.17431,1.42084,1.42084,1.68981,1.68981,1.97654,1.97654,2.27376,2.27376,2.57213,2.57213,2.85991,2.85991,3.12578,3.12578,3.36557,3.36557,3.57903,3.57903,3.76886,3.76886,3.93864,3.93864,4.09153,4.09153,4.22961,4.22961,4.3538,4.3538,4.4638,4.4638,4.55827,4.55827,4.63489,4.63489,4.6905,4.6905,4.72129,4.72129,4.72312,4.72312,4.69187,4.69187,4.62412,4.62412,4.52206,4.52206,4.39182,4.39182,4.2414,4.2414,4.08588,4.08588,3.94532,3.94532,3.8415,3.8415,3.79416,3.79416,3.81725,3.81725,3.91596,3.91596,4.08191,4.08191,4.27543,4.27543,4.4434,4.4434,4.54368,4.54368]]
position_full_analytiqe = [[0.01,0.01,0.11,0.11,0.149806,0.149806,0.198487,0.198487,0.250557,0.250557,0.306576,0.306576,0.36639,0.36639,0.429345,0.429345,0.492206,0.492206,0.533951,0.533951,0.60369,0.60369,0.657,0.657,0.745002,0.745002,0.796172,0.796172,0.907912,0.907912,0.955473,0.955473,1.08492,1.08492,1.15977,1.15977,1.30496,1.30496,1.40464,1.40464,1.56745,1.56745,1.6448,1.6448,1.83933,1.83933,1.96947,1.96947,2.18183,2.18183,2.2515,2.2515,2.50792,2.50792,2.62648,2.62648,2.9107,2.9107,2.99101,2.99101,3.31752,3.31752,3.40457,3.40457,3.74524,3.74524,3.82683,3.82683,4.23056,4.23056,4.32973,4.32973,4.78819,4.78819,4.88823,4.88823,5.40396,5.40396,5.52407,5.52407,6.1009,6.1009,6.27238,6.27238,6.91436,6.91436,7.15803,7.15803,7.81522,7.81522,7.99273,7.99273,8.79561,8.79561,8.91909,8.91909,9.83233,9.83233,9.969,9.969,10.9722,10.9722],[0.01,0.01,0.11,0.11,0.193193,0.193193,0.299996,0.299996,0.420507,0.420507,0.558642,0.558642,0.717181,0.717181,0.900782,0.900782,1.12251,1.12251,1.46781,1.46781,1.84633,1.84633,2.29426,2.29426,2.63117,2.63117,3.05596,3.05596,3.27553,3.27553,3.57713,3.57713,3.73115,3.73115,3.92283,3.92283,4.04412,4.04412,4.1924,4.1924,4.30183,4.30183,4.46298,4.46298,4.55588,4.55588,4.67421,4.67421,4.76237,4.76237,4.90405,4.90405,4.96965,4.96965,5.0667,5.0667,5.11458,5.11458,5.18751,5.18751,5.20252,5.20252,5.22018,5.22018,5.20076,5.20076,5.15034,5.15034,5.0786,5.0786,4.94726,4.94726,4.83919,4.83919,4.64127,4.64127,4.51626,4.51626,4.29898,4.29898,4.19743,4.19743,4.04293,4.04293,4.01046,4.01046,3.98954,3.98954,4.04582,4.04582,4.17709,4.17709,4.2922,4.2922,4.48786,4.48786,4.54543,4.54543,4.62651,4.62651,4.58012,4.58012]]
position_pol_analytique_bassin_tabule = [[0.01,0.01,0.11,0.11,0.149807,0.149807,0.1985,0.1985,0.250606,0.250606,0.306692,0.306692,0.366632,0.366632,0.429811,0.429811,0.493284,0.493284,0.537366,0.537366,0.603553,0.603553,0.661652,0.661652,0.745306,0.745306,0.804949,0.804949,0.915462,0.915462,0.962199,0.962199,1.09247,1.09247,1.16789,1.16789,1.31381,1.31381,1.40417,1.40417,1.57109,1.57109,1.6914,1.6914,1.87585,1.87585,1.93701,1.93701,2.16332,2.16332,2.32281,2.32281,2.55575,2.55575,2.62453,2.62453,2.91817,2.91817,3.02066,3.02066,3.34471,3.34471,3.42762,3.42762,3.77585,3.77585,3.85831,3.85831,4.26473,4.26473,4.36377,4.36377,4.82556,4.82556,4.92532,4.92532,5.44476,5.44476,5.56365,5.56365,6.14443,6.14443,6.32141,6.32141,6.96684,6.96684,7.20013,7.20013,7.83947,7.83947,7.9981,7.9981,8.80722,8.80722,8.93266,8.93266,9.84669,9.84669,9.98347,9.98347,10.9868,10.9868],[0.01,0.01,0.11,0.11,0.19311,0.19311,0.299021,0.299021,0.418157,0.418157,0.554468,0.554468,0.711037,0.711037,0.891896,0.891896,1.10803,1.10803,1.43802,1.43802,1.82607,1.82607,2.26347,2.26347,2.61865,2.61865,3.03038,3.03038,3.25281,3.25281,3.56242,3.56242,3.71814,3.71814,3.91208,3.91208,4.03488,4.03488,4.19162,4.19162,4.29608,4.29608,4.42631,4.42631,4.52976,4.52976,4.69464,4.69464,4.77354,4.77354,4.87442,4.87442,4.95326,4.95326,5.07664,5.07664,5.1188,5.1188,5.18395,5.18395,5.20062,5.20062,5.21945,5.21945,5.19988,5.19988,5.15028,5.15028,5.08033,5.08033,4.95162,4.95162,4.84634,4.84634,4.65267,4.65267,4.5336,4.5336,4.32543,4.32543,4.22797,4.22797,4.08242,4.08242,4.05561,4.05561,4.04191,4.04191,4.10083,4.10083,4.23566,4.23566,4.34543,4.34543,4.53517,4.53517,4.59048,4.59048,4.66746,4.66746,4.62204,4.62204]]
position_full_tabule = [[0.01,0.01,0.11,0.11,0.151,0.151,0.197492,0.197492,0.246256,0.246256,0.298224,0.298224,0.353728,0.353728,0.413167,0.413167,0.476927,0.476927,0.545325,0.545325,0.618953,0.618953,0.698152,0.698152,0.783529,0.783529,0.875407,0.875407,0.975035,0.975035,1.08305,1.08305,1.20043,1.20043,1.32742,1.32742,1.46463,1.46463,1.61196,1.61196,1.76972,1.76972,1.94138,1.94138,2.12444,2.12444,2.32005,2.32005,2.5324,2.5324,2.75971,2.75971,3.00151,3.00151,3.26056,3.26056,3.53508,3.53508,3.82606,3.82606,4.132,4.132,4.46852,4.46852,4.83123,4.83123,5.2177,5.2177,5.63545,5.63545,6.07875,6.07875,6.54618,6.54618,7.03364,7.03364,7.53442,7.53442,8.0414,8.0414,8.56037,8.56037,9.13733,9.13733,9.75514,9.75514,10.4023,10.4023],[0.01,0.01,0.11,0.11,0.191918,0.191918,0.302019,0.302019,0.429906,0.429906,0.578206,0.578206,0.749072,0.749072,0.943236,0.943236,1.16106,1.16106,1.40486,1.40486,1.66989,1.66989,1.95309,1.95309,2.24547,2.24547,2.54094,2.54094,2.8253,2.8253,3.09226,3.09226,3.33441,3.33441,3.55017,3.55017,3.74057,3.74057,3.91104,3.91104,4.06829,4.06829,4.20705,4.20705,4.33076,4.33076,4.44394,4.44394,4.54005,4.54005,4.61604,4.61604,4.67251,4.67251,4.70458,4.70458,4.70955,4.70955,4.6824,4.6824,4.61933,4.61933,4.52295,4.52295,4.39822,4.39822,4.24967,4.24967,4.09939,4.09939,3.96521,3.96521,3.86493,3.86493,3.81751,3.81751,3.83953,3.83953,3.93666,3.93666,4.10074,4.10074,4.29204,4.29204,4.45934,4.45934,4.56162,4.56162]]

plt.subplot(2, 2, 1)
plt.quiver(xx, yy, Y_vent, X_vent, color='g' , scale=80, width=0.0015, alpha=1)
plt.quiver(xx, yy, Y_courant, X_courant,color='b', scale=80, width=0.0015, alpha=1)
plt.plot(position_full_analytiqe[0], position_full_analytiqe[1], 'o-', color='r', label="Bateau polaire analytique bassin analytique")
plt.legend(loc='upper right')

plt.subplot(2, 2, 4)
plt.quiver(xx, yy, Y_vent, X_vent, color='g' , scale=80, width=0.0015, alpha=1)
plt.quiver(xx, yy, Y_courant, X_courant,color='b', scale=80, width=0.0015, alpha=1)
plt.plot(position_full_tabule[0], position_full_tabule[1], 'o-', color='y', label="Bateau polaire tabule bassin tabule")
plt.legend(loc='upper right')

plt.subplot(2, 2, 3)
plt.quiver(xx, yy, Y_vent, X_vent, color='g' , scale=80, width=0.0015, alpha=1)
plt.quiver(xx, yy, Y_courant, X_courant,color='b', scale=80, width=0.0015, alpha=1)
plt.plot(position_pol_tabule_bassin_analytique[0], position_pol_tabule_bassin_analytique[1], 'o-', color='c', label="Bateau polaire tabule bassin analytique")
plt.legend(loc='upper right')

plt.subplot(2, 2, 2)
plt.quiver(xx, yy, Y_vent, X_vent, color='g' , scale=80, width=0.0015, alpha=1)
plt.quiver(xx, yy, Y_courant, X_courant,color='b', scale=80, width=0.0015, alpha=1)
plt.plot(position_pol_analytique_bassin_tabule[0], position_pol_analytique_bassin_tabule[1], 'o-', color='m', label="Bateau polaire analytique bassin tabule")
plt.legend(loc='upper right')

plt.show()